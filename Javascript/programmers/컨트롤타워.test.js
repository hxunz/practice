// 높이가 서로 다른 타워 N개가 존재한다.각 타워의 높이는 상대적으로 표현되어 높이가 작은 순서대로 1부터 N까지의 수로 나타내어 주어진다.
// 처음 모든 타워는 일반 타워지만 통신 장비 강화를 통해 컨트롤 타워로 업그레이드 시켜줄 수 있다.컨트롤 타워는 외부의 정보를 수신받는 역할로, 모든 컨트롤 타워에 동시에 정보가 도달한다.
// 반면에, 일반 타워는 외부의 정보를 바로 수신받을 수 없고, 그 타워가 가진 높이보다 높으면서 가장 가까운 타워에서 1시간에 걸쳐서 정보를 받아오는 게 정보를 얻는 유일한 방법이다.
// 만역 정보를 받아올 수 있는 타워가 여러개 존재한다면 가장 왼쪽에 있는 타워를 선택하고 존재하지 않는다면 받을 수 없으므로 높이가 N인 타워가 일반 타워일 경우 정보를 받아올 방법이 없다.
// 모든 타워에 외부 정보가 퍼지는 데 너무 오랜 시간이 걸리면 문제가 발생할 수 있으므로 K시간 보다 더한 시간이 걸려서 정보를 얻는 타워가 없도록 일부 타워를 컨트롤 타워로 업그레이드 시켜 주려고 한다.
// 모든 타워를 컨트롤 타워로 업그레이드 한다면 좋겠지만, 통신 장비를 강화하는 데 드는 비용이 적지 않기 때문에 최고 개수의 타워만을 선택하여 강화하기로 했다.강화해야 하는 타워의 개수를 구해보자.

//   n: 타워의 개수를 나타내는 정수
//   k: 기준이 되는 시간을 나타내는 정수
//   h: 각 타워의 높이를 나타내는 정수 배열

const solution = (n, k, h) => {
  
};


test('solution', () => {
  expect(solution(6, 2, [1, 3, 5, 4, 2, 6])).toBe(2);
  expect(solution(9, 2, [9, 5, 3, 8, 7, 6, 4, 2, 1])).toBe(3);
})